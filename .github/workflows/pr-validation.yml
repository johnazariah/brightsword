name: PR Validation

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

env:
  DOTNET_VERSION: '10.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  validate:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet msbuild Build.proj /t:Restore /v:minimal
    
    - name: Build solution
      run: dotnet msbuild Build.proj /t:Build /p:Configuration=Release /v:minimal
    
    - name: Run tests
      run: dotnet msbuild Build.proj /t:Test /p:Configuration=Release /v:minimal
    
    - name: Check for breaking changes
      run: |
        echo "Checking for breaking changes..."
        # TODO: Implement actual breaking change detection
        # For now, this is a placeholder
        echo "No breaking changes detected"
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pr-test-results
        path: artifacts/test-results/**/*.trx
        retention-days: 7
    
    - name: Comment PR with results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const testResults = 'Test results are available in the artifacts.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## PR Validation Results\n\n${testResults}\n\n? All checks passed!`
          });
