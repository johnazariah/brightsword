name: Build and publish docs to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-docs:
    name: Build docs artifacts (reusable build-and-test)
    uses: ./.github/workflows/build-and-test.yml
    with:
      configuration: 'Release'

  publish-docs:
    name: Publish docs to gh-pages
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: ci-artifacts
          path: artifacts/docs

      - name: Verify docs artifact
        run: |
          echo "Verifying artifacts/docs exists and is not empty"
          if [ ! -d "artifacts/docs" ]; then echo "No docs found at artifacts/docs"; exit 1; fi
          COUNT=$(find artifacts/docs -type f | wc -l)
          echo "Files found: $COUNT"
          if [ "$COUNT" -eq "0" ]; then echo "No files in artifacts/docs"; exit 1; fi

      - name: Check push permission for GITHUB_TOKEN
        id: check_push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "Checking whether GITHUB_TOKEN can push to gh-pages branch..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Configure origin to use token so push dry-run uses correct auth
          git remote set-url origin "https://${GITHUB_TOKEN}@github.com/${{ github.repository }}.git"
          git fetch origin gh-pages || true
          if git push --dry-run origin HEAD:gh-pages >/dev/null 2>&1; then
            echo "can_push=true" >> $GITHUB_OUTPUT
          else
            echo "can_push=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to GitHub Pages (direct push)
        if: steps.check_push.outputs.can_push == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./artifacts/docs

      - name: Create PR with docs if direct push blocked
        if: steps.check_push.outputs.can_push == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BRANCH: gh-pages-docs-${{ github.sha }}
        run: |
          set -euo pipefail
          echo "Creating a pull request with docs because direct push is blocked"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Create an orphan branch to contain only the docs
          git checkout --orphan "$PR_BRANCH"
          git rm -rf . >/dev/null 2>&1 || true
          # Copy docs into repo root
          cp -r artifacts/docs/. .
          # Ensure there is something to commit
          if [ -z "$(git ls-files)" ]; then echo "No files to commit"; exit 1; fi
          git add -A
          git commit -m "chore(docs): update gh-pages from CI ${{ github.sha }}"
          git push origin "$PR_BRANCH"

          # Create PR via GitHub API
          PR_TITLE="Automated docs update from CI (${GITHUB_SHA:0:7})"
          PR_BODY="This PR contains an automated docs update produced by CI. If the change is acceptable, merge to update the 'gh-pages' branch."
          API_JSON=$(jq -n --arg title "$PR_TITLE" --arg head "$PR_BRANCH" --arg base "gh-pages" --arg body "$PR_BODY" '{title:$title,head:$head,base:$base,body:$body}')
          RESP=$(curl -s -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github+json" https://api.github.com/repos/${{ github.repository }}/pulls -d "$API_JSON")
          echo "PR created: $(echo "$RESP" | jq -r .html_url // "(no url)")"
