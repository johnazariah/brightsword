name: CI Build

on:
  push:
    branches: [ main, develop, 'feature/**', 'release/**', 'hotfix/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '10.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for versioning
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: msbuild Build.proj /t:BuildPackages /p:Configuration=Release /v:minimal
    
    - name: Run tests
      run: msbuild Build.proj /t:Test /p:Configuration=Release /v:minimal
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: artifacts/test-results/**/*.trx
        retention-days: 30
    
    - name: Create packages
      run: msbuild Build.proj /t:Pack /p:Configuration=Release /v:minimal
    
    - name: Upload packages
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: artifacts/packages/**/*.nupkg
        retention-days: 30

  analyze-changes:
    name: Analyze Changed Projects
    runs-on: ubuntu-latest
    outputs:
      swissknife: ${{ steps.filter.outputs.swissknife }}
      feber: ${{ steps.filter.outputs.feber }}
      squid: ${{ steps.filter.outputs.squid }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check changed files
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          swissknife:
            - 'BrightSword.SwissKnife/**'
          feber:
            - 'BrightSword.Feber/**'
            - 'BrightSword.SwissKnife/**'
          squid:
            - 'BrightSword.Squid/**'
            - 'BrightSword.Feber/**'
            - 'BrightSword.SwissKnife/**'

  publish-preview:
    name: Publish Preview Packages
    runs-on: ubuntu-latest
    needs: [build, analyze-changes]
    if: |
      github.event_name == 'push' && 
      github.ref != 'refs/heads/main' &&
      (needs.analyze-changes.outputs.swissknife == 'true' ||
       needs.analyze-changes.outputs.feber == 'true' ||
       needs.analyze-changes.outputs.squid == 'true')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: artifacts/packages
    
    - name: Publish to GitHub Packages
      run: |
        dotnet nuget push "artifacts/packages/*.nupkg" \
          --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --skip-duplicate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
